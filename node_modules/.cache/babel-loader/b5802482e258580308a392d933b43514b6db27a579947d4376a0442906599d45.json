{"ast":null,"code":"import axios from'axios';// Створення екземпляру axios з базовою URL\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',headers:{'Content-Type':'application/json'}});// Додавання інтерсепторів для обробки запитів\napi.interceptors.request.use(config=>{// Тут може бути логіка додавання токену авторизації, якщо потрібно\nreturn config;},error=>{return Promise.reject(error);});// Додавання інтерсепторів для обробки відповідей\napi.interceptors.response.use(response=>{return response;},error=>{// Обробка помилок\nif(error.response){// Помилка сервера (коди 4XX, 5XX)\nconsole.error('API Error:',error.response.status,error.response.data);// Тут можна додати логіку для відображення повідомлень про помилки\n}else if(error.request){// Запит був зроблений, але відповідь не отримана\nconsole.error('No response received:',error.request);}else{// Щось сталося при налаштуванні запиту\nconsole.error('Error setting up request:',error.message);}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","error","Promise","reject","response","console","status","data","message"],"sources":["/Users/myda2/Documents/AlicationForm/interview-service/interview-service-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Створення екземпляру axios з базовою URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Додавання інтерсепторів для обробки запитів\napi.interceptors.request.use(\n  (config) => {\n    // Тут може бути логіка додавання токену авторизації, якщо потрібно\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Додавання інтерсепторів для обробки відповідей\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Обробка помилок\n    if (error.response) {\n      // Помилка сервера (коди 4XX, 5XX)\n      console.error('API Error:', error.response.status, error.response.data);\n      \n      // Тут можна додати логіку для відображення повідомлень про помилки\n    } else if (error.request) {\n      // Запит був зроблений, але відповідь не отримана\n      console.error('No response received:', error.request);\n    } else {\n      // Щось сталося при налаштуванні запиту\n      console.error('Error setting up request:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CACjEC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV;AACA,MAAO,CAAAA,MAAM,CACf,CAAC,CACAC,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,GAAG,CAACO,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,CACT;AACA,GAAIA,KAAK,CAACG,QAAQ,CAAE,CAClB;AACAC,OAAO,CAACJ,KAAK,CAAC,YAAY,CAAEA,KAAK,CAACG,QAAQ,CAACE,MAAM,CAAEL,KAAK,CAACG,QAAQ,CAACG,IAAI,CAAC,CAEvE;AACF,CAAC,IAAM,IAAIN,KAAK,CAACH,OAAO,CAAE,CACxB;AACAO,OAAO,CAACJ,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACH,OAAO,CAAC,CACvD,CAAC,IAAM,CACL;AACAO,OAAO,CAACJ,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAACO,OAAO,CAAC,CAC3D,CAEA,MAAO,CAAAN,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}